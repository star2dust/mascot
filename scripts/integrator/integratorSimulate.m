function [robot_data,simu_result] = integratorSimulate(scene,pos_traj_ref,pos_traj_hat,pos_end,...
    var_state,var_scale,var_dir,dot_var_state,lambda,playspeed,dt,loop,t,settings)
% get reference velocity
dot_pos_traj_ref = interp1(settings.exp.time,settings.exp.dot_pos,t);
% robot controller
[dot_pos_end,dot_var_scale,dot_var_dir] = integratorControl(pos_traj_ref,pos_end,var_scale,var_dir,dot_pos_traj_ref,settings);
% update pose
pos_traj_ref = pos_traj_ref + dot_pos_traj_ref*dt;
pos_end = pos_end + dot_pos_end*dt;
var_scale = var_scale+dot_var_scale*dt;
var_dir = var_dir+dot_var_dir*dt;
% update figure
if mod(loop,playspeed)==0
    scene = integratorAnimate(scene,pos_traj_ref,pos_end,settings);
end
% save data
var_name = @(x) inputname(1);
robot_data = struct(var_name(t),t,...
    var_name(pos_traj_ref),pos_traj_ref,...
    var_name(pos_traj_hat),pos_traj_hat,...
    var_name(pos_end),pos_end,...
    var_name(var_state),var_state,...
    var_name(var_scale),var_scale,...
    var_name(var_dir),var_dir,...
    var_name(dot_var_state),dot_var_state,...
    var_name(lambda),lambda);
% result
simu_result = num2str(var_scale');
end